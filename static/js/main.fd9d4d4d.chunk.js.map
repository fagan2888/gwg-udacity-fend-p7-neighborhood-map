{"version":3,"sources":["SquareAPI.jsx","ErrorComp.jsx","MapComp.jsx","Drawer.jsx","App.js","serviceWorker.js","index.js"],"names":["Helper","keys","client_id","client_secret","v","Object","map","key","concat","join","urlPrams","Accept","endPoint","method","requestData","headers","fetch","baseURL","auth","urlBuilder","then","res","json","SquareAPI","simpleFetch","VENUE_ID","ErrorComp","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_default","a","createElement","className","style","backgroundColor","position","margin","borderRadius","padding","color","fontSize","textAlign","Component","MapComp","_this$props","props","google","state","whenMapIsReady","closeInfoWindow","venue","selectedPlace","dist","aria-label","role","visible","mapVisible","zoom","center","mapCenter","onReady","onClick","initialCenter","lat","lng","showingInfoWindow","marker","onClose","name","location","address","GoogleApiWrapper","apiKey","LoadingContainer","handleAE","window","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ResponsiveDrawer","mobileOpen","handleDrawerToggle","_this","setState","_this2","classes","theme","_this$props2","onQueryChange","drawer","toolbar","Divider_default","OutlinedInput_default","inputField","placeholder","onChange","event","target","labelWidth","labelRef","offsetWidth","squareAPIerror","TextField_default","disabled","error","id","label","defaultValue","textField","variant","width","List_default","list","filterdVenues","aVenue","Button_default","button","onListClick","listButton","ListItemText_default","primary","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","IconButton_default","menuButton","Menu_default","Typography_default","noWrap","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","open","paper","drawerPaper","ModalProps","keepMounted","xsDown","content","React","withStyles","display","defineProperty","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","spacing","unit","input","withTheme","textTransform","App","squareVenues","allMarkers","mapLoaded","dropPins","mapProps","console","log","setTimeout","createMarkers","forEach","idx","maps","Marker","animation","Animation","DROP","addListener","onMarkerClick","push","clearMarkers","setMap","handleBounce","setAnimation","BOUNCE","find","aMarker","innerText","query","filterVenues","filter","toLowerCase","includes","search","near","limit","results","response","venues","geocode","feature","geometry","catch","mapVisilbe","src_Drawer","src_MapComp","src_ErrorComp","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd9d4d4d.chunk.js","sourcesContent":["class Helper {\n  static baseURL(){\n      return 'https://api.foursquare.com/v2/'\n  }\n  static auth(){\n      const keys = {\n          client_id:'N2LF450TRQ1L3PF3DSWNIV1N3UXBH1LRQ5LQ4PULFCAIO5A5',\n          client_secret:'ONQENVONQGOXO0UJ2WCXC1A55Q3F00X0CAV505SXNUPAXOJD',\n          v: '20181028'\n      };\n      return Object.keys(keys)\n          .map(key => `${key}=${keys[key]}`)\n          .join('&');\n  }\n  static urlBuilder(urlPrams) {\n      if(!urlPrams){\n          return ''\n      }\n      return Object.keys(urlPrams)\n          .map(key => `${key}=${urlPrams[key]}`)\n          .join('&');\n  }\n  static headers() {\n      return {\n          Accept: 'application/json'\n      };\n  }\n  static simpleFetch(endPoint, method, urlPrams) {\n      let requestData = {\n          method,\n          headers: Helper.headers()\n      };\n      return fetch(\n          `${Helper.baseURL()}${endPoint}?${Helper.auth()}&${Helper.urlBuilder(urlPrams)}`,\n          requestData\n      ).then(res => res.json());\n  }\n}\nexport default class SquareAPI {\n  static search(urlPrams){\n      return Helper.simpleFetch('/venues/search', 'GET', urlPrams);\n  }\n  static getVenueDetails(VENUE_ID){\n      return Helper.simpleFetch(`/venues/${VENUE_ID}`, 'GET')\n  }\n  static getVenuePhotos(VENUE_ID){\n      return Helper.simpleFetch(`/venues/${VENUE_ID}/photos`, 'GET')\n  }\n}","import React, { Component } from 'react'\n\nexport class ErrorComp extends Component {\n\n  render() {\n    \n    return (\n      <div className='error' style={{ \n        backgroundColor: 'lightgray',\n        position: 'absolute',\n        margin: 12,\n        borderRadius: 5,\n        padding: 45,\n      }}>\n        <h4 style={{ \n          color: 'white',\n          fontSize: '1.25rem',\n          textAlign: 'center'\n        }}\n        >We Are Unable to Process Your Request At This Time</h4>\n      </div>\n    )\n  }\n}\n\nexport default ErrorComp","import React, { Component } from 'react'\nimport { Map, InfoWindow, GoogleApiWrapper } from 'google-maps-react'\nimport handleAE from './ErrorComp'\n\n\nconst apiKey = 'AIzaSyDS-ak8ed2Bx4ib-u9-9KCRHdLJVKYKvlY'\n\nexport class MapComp extends Component {\n\n  render() {\n    const { google, state, style, whenMapIsReady, closeInfoWindow } = this.props\n    const venue = state.selectedPlace\n    \n    return (\n      \n      <Map\n        aria-label='map'\n        role='application'\n        visible={state.mapVisible}\n        google={google}\n        style={style.map}\n        zoom={state.zoom}\n        center={state.mapCenter}\n        onReady={whenMapIsReady}\n        onClick={closeInfoWindow}\n        initialCenter={{ lat: 40.745, lng: -73.985 }}\n      > \n        <InfoWindow\n          visible={state.showingInfoWindow}\n          marker={state.selectedPlace}\n          onClose={closeInfoWindow}\n        >\n          <div>\n              <h4>{venue && venue.name}</h4>\n              <h4>{venue && venue.location.address}</h4>\n          </div>\n        </InfoWindow>\n\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({ apiKey, LoadingContainer: handleAE})(MapComp)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nconst drawerWidth = 270;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass ResponsiveDrawer extends React.Component {\n  state = {\n    mobileOpen: false,\n  };\n  \n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { style, state, onQueryChange} = this.props;\n    \n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n\n        <OutlinedInput\n          style={style.inputField}\n          placeholder='Filter list'\n          onChange={event => onQueryChange(event.target.value)}\n          aria-label='filter list'\n          labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n        />\n        <Divider />\n\n        {state.squareAPIerror && \n          <TextField\n            disabled\n            error\n            id=\"outlined-error\"\n            label=\"Error\"\n            defaultValue='ForSquare data unavalable'\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{\n              margin: '15px',\n              width: '-webkit-fill-available',\n            }}\n            visible='false'\n          />\n        }\n        \n        <List style={style.list}>\n          {state.filterdVenues.map(aVenue => (\n\n            <Button \n              key={aVenue.id}\n              variant=\"outlined\" \n              className={classes.button}\n              onClick={this.props.onListClick}\n              style={style.listButton}\n            >\n              <ListItemText style={{fontSize: '22px'}} primary={aVenue.name}/>\n            </Button>\n            ))}\n        </List>\n        <Divider />\n\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              NYC Libraries\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swap with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n        </main>\n      </div>\n    );\n  }\n}\n\nResponsiveDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\n","import React, { Component } from 'react'\nimport './App.css'\nimport SquareAPI from './SquareAPI'\nimport MapComp from './MapComp'\nimport Drawer from './Drawer'\nimport ErrorComp from './ErrorComp'\n\nconst style = {\n  list: {\n    padding: 5\n  },\n  inputField: { \n    width: '-webkit-fill-available',\n    color: 'blue',\n    margin: '0.9rem'\n  },\n  listButton: {\n    width: '-webkit-fill-available',\n    padding: 12,\n    textTransform: 'none',\n  },\n  map: {\n    margin: 12,\n    borderRadius: 5,\n  }\n}\n\nclass App extends Component {\n\n  state = {\n    squareVenues: [],\n    filterdVenues: [],\n    allMarkers: [],\n    zoom: 14,\n    center: {},\n    mapCenter: {},\n    mapLoaded: false,\n    dropPins: true,\n    selectedPlace: null,\n    showingInfoWindow: false,\n    squareAPIerror: false,\n    mapVisible: true\n  }\n\n  componentDidMount() {\n    SquareAPI.search({\n      near: 'New York, NY',\n      query: 'library',\n      limit: 10\n    }).then(results => {\n      // when squareAPI responds with error message\n      this.setState({\n        squareVenues: results.response.venues,\n        filterdVenues: results.response.venues,\n        mapCenter: results.response.geocode.feature.geometry.center\n      })\n    }).catch(() => this.setState( {squareAPIerror: true, mapVisilbe: false} ))\n  }\n\n  whenMapIsReady = (mapProps, map) => {\n    console.log('MAP ready')\n    this.setState({ map })\n    setTimeout(() => this.createMarkers(), 750)\n  };\n\n  createMarkers = () => {\n\n    let allMarkers = []\n    \n    this.state.filterdVenues.forEach((aVenue, idx) => {\n    \n      window.setTimeout(() => {\n        let marker = new window.google.maps.Marker({\n          map: this.state.map,\n          name: aVenue.name,\n          location: aVenue.location,\n          animation: this.state.dropPins ? window.google.maps.Animation.DROP: null,\n          position: { lat: aVenue.location.lat, lng: aVenue.location.lng },\n        })\n        marker.addListener('click', () => this.onMarkerClick(marker))\n        allMarkers.push(marker)\n      }, this.state.dropPins ? idx * 175: idx * 50)\n\n      this.setState({ allMarkers })\n    })\n  }\n\n  clearMarkers = () => {\n    this.state.allMarkers.forEach(marker => marker.setMap(null))\n  }\n\n  onMarkerClick = (marker) => {\n    this.setState({\n      selectedPlace: marker,\n      showingInfoWindow: true\n    })\n    this.handleBounce(marker)\n  }\n\n  handleBounce = (marker) => {\n    marker.setAnimation(window.google.maps.Animation.BOUNCE)\n    setTimeout(() => marker.setAnimation(null), 2500)\n  }\n\n  onListClick = (event) => {\n    console.log('listButton Clicked', event)\n    // find matching marker\n    let marker = this.state.allMarkers.find(aMarker =>\n      aMarker.name === event.target.innerText)\n    // update active place\n    this.onMarkerClick(marker)\n  }\n\n  closeInfoWindow = () => this.setState({\n    selectedPlace: null,\n    showingInfoWindow: false\n  })\n\n  onQueryChange = (query) => {\n    this.clearMarkers()\n    this.setState({\n      query,\n      filterdVenues: this.filterVenues(query),\n      dropPins: false,\n      showingInfoWindow: false\n    },\n      () => this.createMarkers()\n    )\n  }\n\n  filterVenues = (query) => {\n    return this.state.squareVenues.filter(aVenue => \n      aVenue.name.toLowerCase().includes(query.toLowerCase()))\n  }\n\n  render() {\n\n    return (\n      <div className='main'>\n        <Drawer \n          style={style}\n          state={this.state}\n          onListClick={this.onListClick}\n          onQueryChange={this.onQueryChange}\n          closeInfoWindow={this.closeInfoWindow}\n        />\n        <MapComp\n          style={style}\n          state={this.state}\n          onMarkerClick={this.onMarkerClick}\n          whenMapIsReady={this.whenMapIsReady}\n          closeInfoWindow={this.closeInfoWindow}\n        />\n        {this.state.squareAPIerror && <ErrorComp />}\n      </div>\n  )\n  }\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  // <Router>\n    <App />, document.getElementById('root')\n  // </Router>\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}